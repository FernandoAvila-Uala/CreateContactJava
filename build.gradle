plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
}
group 'org.ferdev.contactapp'
version 'TEST'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    // Jackson
    implementation "com.fasterxml.jackson.core:jackson-databind:2.12.5"
    implementation "com.fasterxml.jackson.core:jackson-core:2.12.5"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.12.5"
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.13.0'


    // AWS
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.530'
    implementation 'com.amazonaws:aws-java-sdk-sns:1.12.533'

    // Sl4j
    implementation 'ch.qos.logback:logback-classic:1.3.5'
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
    implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
    runtimeOnly "net.logstash.logback:logstash-logback-encoder:6.6"

    // Joda
    implementation 'joda-time:joda-time:2.8.1'

}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build.dependsOn buildZip

task fatjar(type: Jar) {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    useJUnitPlatform()
}
